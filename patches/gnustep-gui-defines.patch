diff --git a/GNUmakefile b/GNUmakefile
index 97e456771..252db6cda 100644
--- a/GNUmakefile
+++ b/GNUmakefile
@@ -60,9 +60,7 @@ Tools \
 Panels \
 PrinterTypes \
 TextConverters \
-ColorPickers \
 KeyBindings \
 Resources \
-Printing \
 Themes \
 Tests
diff --git a/Model/GMAppKit.m b/Model/GMAppKit.m
index 978c88fe3..05c92f9ad 100644
--- a/Model/GMAppKit.m
+++ b/Model/GMAppKit.m
@@ -455,7 +455,7 @@ void __dummy_GMAppKit_functionForLinking() {}
     cell_array = [unarchiver decodeObjectWithName:@"cells"];
     [self renewRows:nr columns:nc];
 #if GNU_GUI_LIBRARY
-    _selectedRow = _selectedColumn = 0;
+    //    _selectedRow = _selectedColumn = 0;
 #endif
     for (i = 0; (i < [cell_array count]) && (i < nr*nc); i++)
     {
@@ -1221,9 +1221,9 @@ extern id _nibOwner;
 
 
 #ifdef GNU_GUI_LIBRARY
-  _rFlags.flipped_view = [self isFlipped];
-  if ([_sub_views count])
-    _rFlags.has_subviews = 1;
+  //  _rFlags.flipped_view = [self isFlipped];
+  //if ([_sub_views count])
+  //  _rFlags.has_subviews = 1;
 #endif
 
   return self;
@@ -1302,7 +1302,8 @@ extern id _nibOwner;
 - (id)initWithModelUnarchiver:(GMUnarchiver*)unarchiver
 {
   NSString* frameAutosaveName;
-
+  NSUInteger windowLevel = 0;
+  
   [self setContentView:[unarchiver decodeObjectWithName:@"contentView"]];
   [self setMaxSize:[unarchiver decodeSizeWithName:@"maxSize"]];
   [self setMinSize:[unarchiver decodeSizeWithName:@"minSize"]];
@@ -1312,7 +1313,8 @@ extern id _nibOwner;
     [self setFrameAutosaveName:frameAutosaveName];
 
 #ifdef GNU_GUI_LIBRARY
-  _windowLevel = [unarchiver decodeIntWithName:@"level"];
+  windowLevel = [unarchiver decodeIntWithName:@"level"];
+  [self setWindowLevel: windowLevel];
 #endif
 
   [self setInitialFirstResponder: 
diff --git a/Source/NSFileWrapperExtensions.m b/Source/NSFileWrapperExtensions.m
index b1842c5c2..cd145548c 100644
--- a/Source/NSFileWrapperExtensions.m
+++ b/Source/NSFileWrapperExtensions.m
@@ -39,11 +39,12 @@
 
 - (void) setIcon: (NSImage*)icon
 {
-  ASSIGN(_icon, icon);
+  // ASSIGN(_icon, icon);
 }
 
 - (NSImage*) icon
 {
+  /*
   if (_icon == nil && [self filename])
     {
       return [[NSWorkspace sharedWorkspace] iconForFile: [self filename]];
@@ -52,6 +53,8 @@
     {
       return (NSImage *)_icon;
     }
+  */
+  return nil;
 }
 
 @end
diff --git a/Source/NSView.m b/Source/NSView.m
index 21b3c3b0c..76eb16bba 100644
--- a/Source/NSView.m
+++ b/Source/NSView.m
@@ -695,7 +695,7 @@ GSSetDragTypes(NSView* obj, NSArray *types)
 		}
 	      if (GSIArrayItemAtIndex(nKV(tmp), 0).obj == self)
 		{
-		  GSIArraySetItemAtIndex(nKV(tmp), (GSIArrayItem)(id)nil, 0);
+		  // GSIArraySetItemAtIndex(nKV(tmp), NULL, 0);
 		}
 	    }
 	}
@@ -727,7 +727,7 @@ GSSetDragTypes(NSView* obj, NSArray *types)
 		}
 	      if (GSIArrayItemAtIndex(pKV(tmp), 0).obj == self)
 		{
-		  GSIArraySetItemAtIndex(pKV(tmp), (GSIArrayItem)(id)nil, 0);
+		  //GSIArraySetItemAtIndex(pKV(tmp), (GSIArrayItem)nil, 0);
 		}
 	    }
 	}
@@ -3646,13 +3646,13 @@ static NSView* findByTag(NSView *view, NSInteger aTag, NSUInteger *level)
 		    }
 		  if (GSIArrayItemAtIndex(pKV(tmp), 0).obj == self)
 		    {
-		      GSIArraySetItemAtIndex(pKV(tmp), (GSIArrayItem)(id)nil, 0);
+		      //GSIArraySetItemAtIndex(pKV(tmp), (GSIArrayItem)nil, 0);
 		    }
 		}
 	      /*
 	       * Clear link to the next key view.
 	       */
-	      GSIArraySetItemAtIndex(nKV(self), (GSIArrayItem)(id)nil, 0);
+	      //GSIArraySetItemAtIndex(nKV(self), (GSIArrayItem)nil, 0);
 	    }
 	}
       return;
@@ -3666,7 +3666,7 @@ static NSView* findByTag(NSView *view, NSInteger aTag, NSUInteger *level)
        */
       _nextKeyView = NSZoneMalloc(NSDefaultMallocZone(), sizeof(GSIArray_t));
       GSIArrayInitWithZoneAndCapacity(nKV(self), NSDefaultMallocZone(), 1);
-      GSIArrayAddItem(nKV(self), (GSIArrayItem)(id)nil);
+      //GSIArrayAddItem(nKV(self), (GSIArrayItem)nil);
     }
   else
     {
@@ -3686,7 +3686,7 @@ static NSView* findByTag(NSView *view, NSInteger aTag, NSUInteger *level)
        */
       aView->_previousKeyView = NSZoneMalloc(NSDefaultMallocZone(), sizeof(GSIArray_t));
       GSIArrayInitWithZoneAndCapacity(pKV(aView), NSDefaultMallocZone(), 1);
-      GSIArrayAddItem(pKV(aView), (GSIArrayItem)(id)nil);
+      //GSIArrayAddItem(pKV(aView), (GSIArrayItem)nil);
     }
 
   /*
@@ -3709,7 +3709,7 @@ static NSView* findByTag(NSView *view, NSInteger aTag, NSUInteger *level)
        */
       if (GSIArrayItemAtIndex(nKV(tmp), 0).obj == aView)
 	{
-	  GSIArrayInsertItem(pKV(aView), (GSIArrayItem)(id)nil, 0);
+	  //GSIArrayInsertItem(pKV(aView), (GSIArrayItem)nil, 0);
 	}
     }
 
@@ -3734,7 +3734,7 @@ static NSView* findByTag(NSView *view, NSInteger aTag, NSUInteger *level)
 	}
       if (GSIArrayItemAtIndex(pKV(tmp), 0).obj == self)
 	{
-	  GSIArraySetItemAtIndex(pKV(tmp), (GSIArrayItem)(id)nil, 0);
+	  //GSIArraySetItemAtIndex(pKV(tmp), (GSIArrayItem)nil, 0);
 	}
     }
 
