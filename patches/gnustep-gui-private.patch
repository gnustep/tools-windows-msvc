diff --git a/Headers/AppKit/DPSOperators.h b/Headers/AppKit/DPSOperators.h
index 3641eae9b..2a143b677 100644
--- a/Headers/AppKit/DPSOperators.h
+++ b/Headers/AppKit/DPSOperators.h
@@ -478,70 +478,70 @@ __attribute__((unused));
 static inline void
 DPScurrentalpha(GSCTXT *ctxt, CGFloat* a)
 {
-  (ctxt->methods->DPScurrentalpha_)
+  ([ctxt methods]->DPScurrentalpha_)
     (ctxt, @selector(DPScurrentalpha:), a);
 }
 
 static inline void
 DPScurrentcmykcolor(GSCTXT *ctxt, CGFloat* c, CGFloat* m, CGFloat* y, CGFloat* k)
 {
-  (ctxt->methods->DPScurrentcmykcolor____)
+  ([ctxt methods]->DPScurrentcmykcolor____)
     (ctxt, @selector(DPScurrentcmykcolor: : : :), c, m, y, k);
 }
 
 static inline void
 DPScurrentgray(GSCTXT *ctxt, CGFloat* gray)
 {
-  (ctxt->methods->DPScurrentgray_)
+  ([ctxt methods]->DPScurrentgray_)
     (ctxt, @selector(DPScurrentgray:), gray);
 }
 
 static inline void
 DPScurrenthsbcolor(GSCTXT *ctxt, CGFloat* h, CGFloat* s, CGFloat* b)
 {
-  (ctxt->methods->DPScurrenthsbcolor___)
+  ([ctxt methods]->DPScurrenthsbcolor___)
     (ctxt, @selector(DPScurrenthsbcolor: : :), h, s, b);
 }
 
 static inline void
 DPScurrentrgbcolor(GSCTXT *ctxt, CGFloat* r, CGFloat* g, CGFloat* b)
 {
-  (ctxt->methods->DPScurrentrgbcolor___)
+  ([ctxt methods]->DPScurrentrgbcolor___)
     (ctxt, @selector(DPScurrentrgbcolor: : :), r, g, b);
 }
 
 static inline void
 DPSsetalpha(GSCTXT *ctxt, CGFloat a)
 {
-  (ctxt->methods->DPSsetalpha_)
+  ([ctxt methods]->DPSsetalpha_)
     (ctxt, @selector(DPSsetalpha:), a);
 }
 
 static inline void
 DPSsetcmykcolor(GSCTXT *ctxt, CGFloat c, CGFloat m, CGFloat y, CGFloat k)
 {
-  (ctxt->methods->DPSsetcmykcolor____)
+  ([ctxt methods]->DPSsetcmykcolor____)
     (ctxt, @selector(DPSsetcmykcolor: : : :), c, m, y, k);
 }
 
 static inline void
 DPSsetgray(GSCTXT *ctxt, CGFloat gray)
 {
-  (ctxt->methods->DPSsetgray_)
+  ([ctxt methods]->DPSsetgray_)
     (ctxt, @selector(DPSsetgray:), gray);
 }
 
 static inline void
 DPSsethsbcolor(GSCTXT *ctxt, CGFloat h, CGFloat s, CGFloat b)
 {
-  (ctxt->methods->DPSsethsbcolor___)
+  ([ctxt methods]->DPSsethsbcolor___)
     (ctxt, @selector(DPSsethsbcolor: : :), h, s, b);
 }
 
 static inline void
 DPSsetrgbcolor(GSCTXT *ctxt, CGFloat r, CGFloat g, CGFloat b)
 {
-  (ctxt->methods->DPSsetrgbcolor___)
+  ([ctxt methods]->DPSsetrgbcolor___)
     (ctxt, @selector(DPSsetrgbcolor: : :), r, g, b);
 }
 
@@ -549,28 +549,28 @@ DPSsetrgbcolor(GSCTXT *ctxt, CGFloat r, CGFloat g, CGFloat b)
 static inline void
 GSSetFillColorspace(GSCTXT *ctxt, NSDictionary * dict)
 {
-  (ctxt->methods->GSSetFillColorspace_)
+  ([ctxt methods]->GSSetFillColorspace_)
     (ctxt, @selector(GSSetFillColorspace:), dict);
 }
 
 static inline void
 GSSetStrokeColorspace(GSCTXT *ctxt, NSDictionary * dict)
 {
-  (ctxt->methods->GSSetStrokeColorspace_)
+  ([ctxt methods]->GSSetStrokeColorspace_)
     (ctxt, @selector(GSSetStrokeColorspace:), dict);
 }
 
 static inline void
 GSSetFillColor(GSCTXT *ctxt, CGFloat * values)
 {
-  (ctxt->methods->GSSetFillColor_)
+  ([ctxt methods]->GSSetFillColor_)
     (ctxt, @selector(GSSetFillColor:), values);
 }
 
 static inline void
 GSSetStrokeColor(GSCTXT *ctxt, CGFloat * values)
 {
-  (ctxt->methods->GSSetStrokeColor_)
+  ([ctxt methods]->GSSetStrokeColor_)
     (ctxt, @selector(GSSetStrokeColor:), values);
 }
 
@@ -581,56 +581,56 @@ GSSetStrokeColor(GSCTXT *ctxt, CGFloat * values)
 static inline void
 DPSashow(GSCTXT *ctxt, CGFloat x, CGFloat y, const char* s)
 {
-  (ctxt->methods->DPSashow___)
+  ([ctxt methods]->DPSashow___)
     (ctxt, @selector(DPSashow: : :), x, y, s);
 }
 
 static inline void
 DPSawidthshow(GSCTXT *ctxt, CGFloat cx, CGFloat cy, int c, CGFloat ax, CGFloat ay, const char* s)
 {
-  (ctxt->methods->DPSawidthshow______)
+  ([ctxt methods]->DPSawidthshow______)
     (ctxt, @selector(DPSawidthshow: : : : : :), cx, cy, c, ax, ay, s);
 }
 
 static inline void
 DPScharpath(GSCTXT *ctxt, const char* s, int b)
 {
-  (ctxt->methods->DPScharpath__)
+  ([ctxt methods]->DPScharpath__)
     (ctxt, @selector(DPScharpath: :), s, b);
 }
 
 static inline void
 DPSshow(GSCTXT *ctxt, const char* s)
 {
-  (ctxt->methods->DPSshow_)
+  ([ctxt methods]->DPSshow_)
     (ctxt, @selector(DPSshow:), s);
 }
 
 static inline void
 DPSwidthshow(GSCTXT *ctxt, CGFloat x, CGFloat y, int c, const char* s)
 {
-  (ctxt->methods->DPSwidthshow____)
+  ([ctxt methods]->DPSwidthshow____)
     (ctxt, @selector(DPSwidthshow: : : :), x, y, c, s);
 }
 
 static inline void
 DPSxshow(GSCTXT *ctxt, const char* s, const CGFloat* numarray, int size)
 {
-  (ctxt->methods->DPSxshow___)
+  ([ctxt methods]->DPSxshow___)
     (ctxt, @selector(DPSxshow: : :), s, numarray, size);
 }
 
 static inline void
 DPSxyshow(GSCTXT *ctxt, const char* s, const CGFloat* numarray, int size)
 {
-  (ctxt->methods->DPSxyshow___)
+  ([ctxt methods]->DPSxyshow___)
     (ctxt, @selector(DPSxyshow: : :), s, numarray, size);
 }
 
 static inline void
 DPSyshow(GSCTXT *ctxt, const char* s, const CGFloat* numarray, int size)
 {
-  (ctxt->methods->DPSyshow___)
+  ([ctxt methods]->DPSyshow___)
     (ctxt, @selector(DPSyshow: : :), s, numarray, size);
 }
 
@@ -638,77 +638,77 @@ DPSyshow(GSCTXT *ctxt, const char* s, const CGFloat* numarray, int size)
 static inline void
 GSSetCharacterSpacing(GSCTXT *ctxt, CGFloat extra)
 {
-  (ctxt->methods->GSSetCharacterSpacing_)
+  ([ctxt methods]->GSSetCharacterSpacing_)
     (ctxt, @selector(GSSetCharacterSpacing:), extra);
 }
 
 static inline void
 GSSetFont(GSCTXT *ctxt, NSFont* font)
 {
-  (ctxt->methods->GSSetFont_)
+  ([ctxt methods]->GSSetFont_)
     (ctxt, @selector(GSSetFont:), font);
 }
 
 static inline void
 GSSetFontSize(GSCTXT *ctxt, CGFloat size)
 {
-  (ctxt->methods->GSSetFontSize_)
+  ([ctxt methods]->GSSetFontSize_)
     (ctxt, @selector(GSSetFontSize:), size);
 }
 
 static inline NSAffineTransform *
 GSGetTextCTM(GSCTXT *ctxt)
 {
-  return (ctxt->methods->GSGetTextCTM)
+  return ([ctxt methods]->GSGetTextCTM)
     (ctxt, @selector(GSGetTextCTM));
 }
 
 static inline NSPoint
 GSGetTextPosition(GSCTXT *ctxt)
 {
-  return (ctxt->methods->GSGetTextPosition)
+  return ([ctxt methods]->GSGetTextPosition)
     (ctxt, @selector(GSGetTextPosition));
 }
 
 static inline void
 GSSetTextCTM(GSCTXT *ctxt, NSAffineTransform * ctm)
 {
-  (ctxt->methods->GSSetTextCTM_)
+  ([ctxt methods]->GSSetTextCTM_)
     (ctxt, @selector(GSSetTextCTM:), ctm);
 }
 
 static inline void
 GSSetTextDrawingMode(GSCTXT *ctxt, GSTextDrawingMode mode)
 {
-  (ctxt->methods->GSSetTextDrawingMode_)
+  ([ctxt methods]->GSSetTextDrawingMode_)
     (ctxt, @selector(GSSetTextDrawingMode:), mode);
 }
 
 static inline void
 GSSetTextPosition(GSCTXT *ctxt, NSPoint loc)
 {
-  (ctxt->methods->GSSetTextPosition_)
+  ([ctxt methods]->GSSetTextPosition_)
     (ctxt, @selector(GSSetTextPosition:), loc);
 }
 
 static inline void
 GSShowText(GSCTXT *ctxt, const char * string, size_t length)
 {
-  (ctxt->methods->GSShowText__)
+  ([ctxt methods]->GSShowText__)
     (ctxt, @selector(GSShowText: :), string, length);
 }
 
 static inline void
 GSShowGlyphs(GSCTXT *ctxt, const NSGlyph * glyphs, size_t length)
 {
-  (ctxt->methods->GSShowGlyphs__)
+  ([ctxt methods]->GSShowGlyphs__)
     (ctxt, @selector(GSShowGlyphs: :), glyphs, length);
 }
 
 static inline void
 GSShowGlyphsWithAdvances(GSCTXT *ctxt, const NSGlyph * glyphs, const NSSize * advances, size_t length)
 {
-  (ctxt->methods->GSShowGlyphsWithAdvances__)
+  ([ctxt methods]->GSShowGlyphsWithAdvances__)
     (ctxt, @selector(GSShowGlyphsWithAdvances: :), glyphs, advances, length); 
 }
 
@@ -719,28 +719,28 @@ GSShowGlyphsWithAdvances(GSCTXT *ctxt, const NSGlyph * glyphs, const NSSize * ad
 static inline void
 DPSgrestore(GSCTXT *ctxt)
 {
-  (ctxt->methods->DPSgrestore)
+  ([ctxt methods]->DPSgrestore)
     (ctxt, @selector(DPSgrestore));
 }
 
 static inline void
 DPSgsave(GSCTXT *ctxt)
 {
-  (ctxt->methods->DPSgsave)
+  ([ctxt methods]->DPSgsave)
     (ctxt, @selector(DPSgsave));
 }
 
 static inline void
 DPSinitgraphics(GSCTXT *ctxt)
 {
-  (ctxt->methods->DPSinitgraphics)
+  ([ctxt methods]->DPSinitgraphics)
     (ctxt, @selector(DPSinitgraphics));
 }
 
 static inline void
 DPSsetgstate(GSCTXT *ctxt, NSInteger gst)
 {
-  (ctxt->methods->DPSsetgstate_)
+  ([ctxt methods]->DPSsetgstate_)
     (ctxt, @selector(DPSsetgstate:), gst);
 }
 
@@ -748,21 +748,21 @@ DPSsetgstate(GSCTXT *ctxt, NSInteger gst)
 static inline NSInteger
 GSDefineGState(GSCTXT *ctxt)
 {
-  return (ctxt->methods->GSDefineGState)
+  return ([ctxt methods]->GSDefineGState)
     (ctxt, @selector(GSDefineGState));
 }
 
 static inline void
 GSUndefineGState(GSCTXT *ctxt, NSInteger gst)
 {
-  (ctxt->methods->GSUndefineGState_)
+  ([ctxt methods]->GSUndefineGState_)
     (ctxt, @selector(GSUndefineGState:), gst);
 }
 
 static inline void
 GSReplaceGState(GSCTXT *ctxt, NSInteger gst)
 {
-  (ctxt->methods->GSReplaceGState_)
+  ([ctxt methods]->GSReplaceGState_)
     (ctxt, @selector(GSReplaceGState:), gst);
 }
 
@@ -772,105 +772,105 @@ GSReplaceGState(GSCTXT *ctxt, NSInteger gst)
 static inline void
 DPScurrentflat(GSCTXT *ctxt, CGFloat* flatness)
 {
-  (ctxt->methods->DPScurrentflat_)
+  ([ctxt methods]->DPScurrentflat_)
     (ctxt, @selector(DPScurrentflat:), flatness);
 }
 
 static inline void
 DPScurrentlinecap(GSCTXT *ctxt, int* linecap)
 {
-  (ctxt->methods->DPScurrentlinecap_)
+  ([ctxt methods]->DPScurrentlinecap_)
     (ctxt, @selector(DPScurrentlinecap:), linecap);
 }
 
 static inline void
 DPScurrentlinejoin(GSCTXT *ctxt, int* linejoin)
 {
-  (ctxt->methods->DPScurrentlinejoin_)
+  ([ctxt methods]->DPScurrentlinejoin_)
     (ctxt, @selector(DPScurrentlinejoin:), linejoin);
 }
 
 static inline void
 DPScurrentlinewidth(GSCTXT *ctxt, CGFloat* width)
 {
-  (ctxt->methods->DPScurrentlinewidth_)
+  ([ctxt methods]->DPScurrentlinewidth_)
     (ctxt, @selector(DPScurrentlinewidth:), width);
 }
 
 static inline void
 DPScurrentmiterlimit(GSCTXT *ctxt, CGFloat* limit)
 {
-  (ctxt->methods->DPScurrentmiterlimit_)
+  ([ctxt methods]->DPScurrentmiterlimit_)
     (ctxt, @selector(DPScurrentmiterlimit:), limit);
 }
 
 static inline void
 DPScurrentpoint(GSCTXT *ctxt, CGFloat* x, CGFloat* y)
 {
-  (ctxt->methods->DPScurrentpoint__)
+  ([ctxt methods]->DPScurrentpoint__)
     (ctxt, @selector(DPScurrentpoint: :), x, y);
 }
 
 static inline void
 DPScurrentstrokeadjust(GSCTXT *ctxt, int* b)
 {
-  (ctxt->methods->DPScurrentstrokeadjust_)
+  ([ctxt methods]->DPScurrentstrokeadjust_)
     (ctxt, @selector(DPScurrentstrokeadjust:), b);
 }
 
 static inline void
 DPSsetdash(GSCTXT *ctxt, const CGFloat* pat, NSInteger size, CGFloat offset)
 {
-  (ctxt->methods->DPSsetdash___)
+  ([ctxt methods]->DPSsetdash___)
     (ctxt, @selector(DPSsetdash: : :), pat, size, offset);
 }
 
 static inline void
 DPSsetflat(GSCTXT *ctxt, CGFloat flatness)
 {
-  (ctxt->methods->DPSsetflat_)
+  ([ctxt methods]->DPSsetflat_)
     (ctxt, @selector(DPSsetflat:), flatness);
 }
 
 static inline void
 DPSsethalftonephase(GSCTXT *ctxt, CGFloat x, CGFloat y)
 {
-  (ctxt->methods->DPSsethalftonephase__)
+  ([ctxt methods]->DPSsethalftonephase__)
     (ctxt, @selector(DPSsethalftonephase: :), x, y);
 }
 
 static inline void
 DPSsetlinecap(GSCTXT *ctxt, int linecap)
 {
-  (ctxt->methods->DPSsetlinecap_)
+  ([ctxt methods]->DPSsetlinecap_)
     (ctxt, @selector(DPSsetlinecap:), linecap);
 }
 
 static inline void
 DPSsetlinejoin(GSCTXT *ctxt, int linejoin)
 {
-  (ctxt->methods->DPSsetlinejoin_)
+  ([ctxt methods]->DPSsetlinejoin_)
     (ctxt, @selector(DPSsetlinejoin:), linejoin);
 }
 
 static inline void
 DPSsetlinewidth(GSCTXT *ctxt, CGFloat width)
 {
-  (ctxt->methods->DPSsetlinewidth_)
+  ([ctxt methods]->DPSsetlinewidth_)
     (ctxt, @selector(DPSsetlinewidth:), width);
 }
 
 static inline void
 DPSsetmiterlimit(GSCTXT *ctxt, CGFloat limit)
 {
-  (ctxt->methods->DPSsetmiterlimit_)
+  ([ctxt methods]->DPSsetmiterlimit_)
     (ctxt, @selector(DPSsetmiterlimit:), limit);
 }
 
 static inline void
 DPSsetstrokeadjust(GSCTXT *ctxt, int b)
 {
-  (ctxt->methods->DPSsetstrokeadjust_)
+  ([ctxt methods]->DPSsetstrokeadjust_)
     (ctxt, @selector(DPSsetstrokeadjust:), b);
 }
 
@@ -881,35 +881,35 @@ DPSsetstrokeadjust(GSCTXT *ctxt, int b)
 static inline void
 DPSconcat(GSCTXT *ctxt, const CGFloat* m)
 {
-  (ctxt->methods->DPSconcat_)
+  ([ctxt methods]->DPSconcat_)
     (ctxt, @selector(DPSconcat:), m);
 }
 
 static inline void
 DPSinitmatrix(GSCTXT *ctxt)
 {
-  (ctxt->methods->DPSinitmatrix)
+  ([ctxt methods]->DPSinitmatrix)
     (ctxt, @selector(DPSinitmatrix));
 }
 
 static inline void
 DPSrotate(GSCTXT *ctxt, CGFloat angle)
 {
-  (ctxt->methods->DPSrotate_)
+  ([ctxt methods]->DPSrotate_)
     (ctxt, @selector(DPSrotate:), angle);
 }
 
 static inline void
 DPSscale(GSCTXT *ctxt, CGFloat x, CGFloat y)
 {
-  (ctxt->methods->DPSscale__)
+  ([ctxt methods]->DPSscale__)
     (ctxt, @selector(DPSscale: :), x, y);
 }
 
 static inline void
 DPStranslate(GSCTXT *ctxt, CGFloat x, CGFloat y)
 {
-  (ctxt->methods->DPStranslate__)
+  ([ctxt methods]->DPStranslate__)
     (ctxt, @selector(DPStranslate: :), x, y);
 }
 
@@ -917,21 +917,21 @@ DPStranslate(GSCTXT *ctxt, CGFloat x, CGFloat y)
 static inline NSAffineTransform *
 GSCurrentCTM(GSCTXT *ctxt)
 {
-  return (ctxt->methods->GSCurrentCTM)
+  return ([ctxt methods]->GSCurrentCTM)
     (ctxt, @selector(GSCurrentCTM));
 }
 
 static inline void
 GSSetCTM(GSCTXT *ctxt, NSAffineTransform * ctm)
 {
-  (ctxt->methods->GSSetCTM_)
+  ([ctxt methods]->GSSetCTM_)
     (ctxt, @selector(GSSetCTM:), ctm);
 }
 
 static inline void
 GSConcatCTM(GSCTXT *ctxt, NSAffineTransform * ctm)
 {
-  (ctxt->methods->GSConcatCTM_)
+  ([ctxt methods]->GSConcatCTM_)
     (ctxt, @selector(GSConcatCTM:), ctm);
 }
 
@@ -942,168 +942,168 @@ GSConcatCTM(GSCTXT *ctxt, NSAffineTransform * ctm)
 static inline void
 DPSarc(GSCTXT *ctxt, CGFloat x, CGFloat y, CGFloat r, CGFloat angle1, CGFloat angle2)
 {
-  (ctxt->methods->DPSarc_____)
+  ([ctxt methods]->DPSarc_____)
     (ctxt, @selector(DPSarc: : : : :), x, y, r, angle1, angle2);
 }
 
 static inline void
 DPSarcn(GSCTXT *ctxt, CGFloat x, CGFloat y, CGFloat r, CGFloat angle1, CGFloat angle2)
 {
-  (ctxt->methods->DPSarcn_____)
+  ([ctxt methods]->DPSarcn_____)
     (ctxt, @selector(DPSarcn: : : : :), x, y, r, angle1, angle2);
 }
 
 static inline void
 DPSarct(GSCTXT *ctxt, CGFloat x1, CGFloat y1, CGFloat x2, CGFloat y2, CGFloat r)
 {
-  (ctxt->methods->DPSarct_____)
+  ([ctxt methods]->DPSarct_____)
     (ctxt, @selector(DPSarct: : : : :), x1, y1, x2, y2, r);
 }
 
 static inline void
 DPSclip(GSCTXT *ctxt)
 {
-  (ctxt->methods->DPSclip)
+  ([ctxt methods]->DPSclip)
     (ctxt, @selector(DPSclip));
 }
 
 static inline void
 DPSclosepath(GSCTXT *ctxt)
 {
-  (ctxt->methods->DPSclosepath)
+  ([ctxt methods]->DPSclosepath)
     (ctxt, @selector(DPSclosepath));
 }
 
 static inline void
 DPScurveto(GSCTXT *ctxt, CGFloat x1, CGFloat y1, CGFloat x2, CGFloat y2, CGFloat x3, CGFloat y3)
 {
-  (ctxt->methods->DPScurveto______)
+  ([ctxt methods]->DPScurveto______)
     (ctxt, @selector(DPScurveto: : : : : :), x1, y1, x2, y2, x3, y3);
 }
 
 static inline void
 DPSeoclip(GSCTXT *ctxt)
 {
-  (ctxt->methods->DPSeoclip)
+  ([ctxt methods]->DPSeoclip)
     (ctxt, @selector(DPSeoclip));
 }
 
 static inline void
 DPSeofill(GSCTXT *ctxt)
 {
-  (ctxt->methods->DPSeofill)
+  ([ctxt methods]->DPSeofill)
     (ctxt, @selector(DPSeofill));
 }
 
 static inline void
 DPSfill(GSCTXT *ctxt)
 {
-  (ctxt->methods->DPSfill)
+  ([ctxt methods]->DPSfill)
     (ctxt, @selector(DPSfill));
 }
 
 static inline void
 DPSflattenpath(GSCTXT *ctxt)
 {
-  (ctxt->methods->DPSflattenpath)
+  ([ctxt methods]->DPSflattenpath)
     (ctxt, @selector(DPSflattenpath));
 }
 
 static inline void
 DPSinitclip(GSCTXT *ctxt)
 {
-  (ctxt->methods->DPSinitclip)
+  ([ctxt methods]->DPSinitclip)
     (ctxt, @selector(DPSinitclip));
 }
 
 static inline void
 DPSlineto(GSCTXT *ctxt, CGFloat x, CGFloat y)
 {
-  (ctxt->methods->DPSlineto__)
+  ([ctxt methods]->DPSlineto__)
     (ctxt, @selector(DPSlineto: :), x, y);
 }
 
 static inline void
 DPSmoveto(GSCTXT *ctxt, CGFloat x, CGFloat y)
 {
-  (ctxt->methods->DPSmoveto__)
+  ([ctxt methods]->DPSmoveto__)
     (ctxt, @selector(DPSmoveto: :), x, y);
 }
 
 static inline void
 DPSnewpath(GSCTXT *ctxt)
 {
-  (ctxt->methods->DPSnewpath)
+  ([ctxt methods]->DPSnewpath)
     (ctxt, @selector(DPSnewpath));
 }
 
 static inline void
 DPSpathbbox(GSCTXT *ctxt, CGFloat* llx, CGFloat* lly, CGFloat* urx, CGFloat* ury)
 {
-  (ctxt->methods->DPSpathbbox____)
+  ([ctxt methods]->DPSpathbbox____)
     (ctxt, @selector(DPSpathbbox: : : :), llx, lly, urx, ury);
 }
 
 static inline void
 DPSrcurveto(GSCTXT *ctxt, CGFloat x1, CGFloat y1, CGFloat x2, CGFloat y2, CGFloat x3, CGFloat y3)
 {
-  (ctxt->methods->DPSrcurveto______)
+  ([ctxt methods]->DPSrcurveto______)
     (ctxt, @selector(DPSrcurveto: : : : : :), x1, y1, x2, y2, x3, y3);
 }
 
 static inline void
 DPSrectclip(GSCTXT *ctxt, CGFloat x, CGFloat y, CGFloat w, CGFloat h)
 {
-  (ctxt->methods->DPSrectclip____)
+  ([ctxt methods]->DPSrectclip____)
     (ctxt, @selector(DPSrectclip: : : :), x, y, w, h);
 }
 
 static inline void
 DPSrectfill(GSCTXT *ctxt, CGFloat x, CGFloat y, CGFloat w, CGFloat h)
 {
-  (ctxt->methods->DPSrectfill____)
+  ([ctxt methods]->DPSrectfill____)
     (ctxt, @selector(DPSrectfill: : : :), x, y, w, h);
 }
 
 static inline void
 DPSrectstroke(GSCTXT *ctxt, CGFloat x, CGFloat y, CGFloat w, CGFloat h)
 {
-  (ctxt->methods->DPSrectstroke____)
+  ([ctxt methods]->DPSrectstroke____)
     (ctxt, @selector(DPSrectstroke: : : :), x, y, w, h);
 }
 
 static inline void
 DPSreversepath(GSCTXT *ctxt)
 {
-  (ctxt->methods->DPSreversepath)
+  ([ctxt methods]->DPSreversepath)
     (ctxt, @selector(DPSreversepath));
 }
 
 static inline void
 DPSrlineto(GSCTXT *ctxt, CGFloat x, CGFloat y)
 {
-  (ctxt->methods->DPSrlineto__)
+  ([ctxt methods]->DPSrlineto__)
     (ctxt, @selector(DPSrlineto: :), x, y);
 }
 
 static inline void
 DPSrmoveto(GSCTXT *ctxt, CGFloat x, CGFloat y)
 {
-  (ctxt->methods->DPSrmoveto__)
+  ([ctxt methods]->DPSrmoveto__)
     (ctxt, @selector(DPSrmoveto: :), x, y);
 }
 
 static inline void
 DPSstroke(GSCTXT *ctxt)
 {
-  (ctxt->methods->DPSstroke)
+  ([ctxt methods]->DPSstroke)
     (ctxt, @selector(DPSstroke));
 }
 
 static inline void
 DPSshfill(GSCTXT *ctxt, NSDictionary *shaderDictionary)
 {
-  (ctxt->methods->DPSshfill)
+  ([ctxt methods]->DPSshfill)
     (ctxt, @selector(DPSshfill:), shaderDictionary);
 }
 
@@ -1111,21 +1111,21 @@ DPSshfill(GSCTXT *ctxt, NSDictionary *shaderDictionary)
 static inline void
 GSSendBezierPath(GSCTXT *ctxt, NSBezierPath * path)
 {
-  (ctxt->methods->GSSendBezierPath_)
+  ([ctxt methods]->GSSendBezierPath_)
     (ctxt, @selector(GSSendBezierPath:), path);
 }
 
 static inline void
 GSRectClipList(GSCTXT *ctxt, const NSRect * rects, int count)
 {
-  (ctxt->methods->GSRectClipList__)
+  ([ctxt methods]->GSRectClipList__)
     (ctxt, @selector(GSRectClipList: :), rects, count);
 }
 
 static inline void
 GSRectFillList(GSCTXT *ctxt, const NSRect * rects, int count)
 {
-  (ctxt->methods->GSRectFillList__)
+  ([ctxt methods]->GSRectFillList__)
     (ctxt, @selector(GSRectFillList: :), rects, count);
 }
 
@@ -1136,28 +1136,28 @@ GSRectFillList(GSCTXT *ctxt, const NSRect * rects, int count)
 static inline void
 GSCurrentDevice(GSCTXT *ctxt, void** device, int* x, int* y)
 {
-  (ctxt->methods->GSCurrentDevice___)
+  ([ctxt methods]->GSCurrentDevice___)
     (ctxt, @selector(GSCurrentDevice: : :), device, x, y);
 }
 
 static inline void
 DPScurrentoffset(GSCTXT *ctxt, int* x, int* y)
 {
-  (ctxt->methods->DPScurrentoffset__)
+  ([ctxt methods]->DPScurrentoffset__)
     (ctxt, @selector(DPScurrentoffset: :), x, y);
 }
 
 static inline void
 GSSetDevice(GSCTXT *ctxt, void* device, int x, int y)
 {
-  (ctxt->methods->GSSetDevice___)
+  ([ctxt methods]->GSSetDevice___)
     (ctxt, @selector(GSSetDevice: : :), device, x, y);
 }
 
 static inline void
 DPSsetoffset(GSCTXT *ctxt, short int x, short int y)
 {
-  (ctxt->methods->DPSsetoffset__)
+  ([ctxt methods]->DPSsetoffset__)
     (ctxt, @selector(DPSsetoffset: :), x, y);
 }
 
@@ -1169,21 +1169,21 @@ static inline void
 DPScomposite(GSCTXT *ctxt, CGFloat x, CGFloat y, CGFloat w, CGFloat h,
              NSInteger gstateNum, CGFloat dx, CGFloat dy, NSCompositingOperation op)
 {
-  (ctxt->methods->DPScomposite________)
+  ([ctxt methods]->DPScomposite________)
     (ctxt, @selector(DPScomposite: : : : : : : :), x, y, w, h, gstateNum, dx, dy, op);
 }
 
 static inline void
 DPScompositerect(GSCTXT *ctxt, CGFloat x, CGFloat y, CGFloat w, CGFloat h, NSCompositingOperation op)
 {
-  (ctxt->methods->DPScompositerect_____)
+  ([ctxt methods]->DPScompositerect_____)
     (ctxt, @selector(DPScompositerect: : : : :), x, y, w, h, op);
 }
 
 static inline void
 DPSdissolve(GSCTXT *ctxt, CGFloat x, CGFloat y, CGFloat w, CGFloat h, NSInteger gstateNum, CGFloat dx, CGFloat dy, CGFloat delta)
 {
-  (ctxt->methods->DPSdissolve________)
+  ([ctxt methods]->DPSdissolve________)
     (ctxt, @selector(DPSdissolve: : : : : : : :), x, y, w, h, gstateNum, dx, dy, delta);
 }
 
@@ -1191,7 +1191,7 @@ DPSdissolve(GSCTXT *ctxt, CGFloat x, CGFloat y, CGFloat w, CGFloat h, NSInteger
 static inline void
 GSDrawImage(GSCTXT *ctxt, NSRect rect, void * imageref)
 {
-  (ctxt->methods->GSDrawImage__)
+  ([ctxt methods]->GSDrawImage__)
     (ctxt, @selector(GSDrawImage: :), rect, imageref);
 }
 
@@ -1206,7 +1206,7 @@ DPSPrintf(GSCTXT *ctxt, const char * fmt, ...)
 
   va_start(ap, fmt);
   if (fmt != NULL)
-    (ctxt->methods->DPSPrintf__)
+    ([ctxt methods]->DPSPrintf__)
       (ctxt, @selector(DPSPrintf: :), fmt, ap);
   va_end(ap);
 }
@@ -1214,7 +1214,7 @@ DPSPrintf(GSCTXT *ctxt, const char * fmt, ...)
 static inline void
 DPSWriteData(GSCTXT *ctxt, const char * buf, unsigned int count)
 {
-  (ctxt->methods->DPSWriteData__)
+  ([ctxt methods]->DPSWriteData__)
     (ctxt, @selector(DPSWriteData: :), buf, count);
 }
 
diff --git a/Headers/AppKit/NSGraphicsContext.h b/Headers/AppKit/NSGraphicsContext.h
index d3bf78e6b..052ed12c8 100644
--- a/Headers/AppKit/NSGraphicsContext.h
+++ b/Headers/AppKit/NSGraphicsContext.h
@@ -190,6 +190,7 @@ APPKIT_EXPORT_CLASS
   NSCompositingOperation _compositingOperation;
 }
 
+- (const gsMethodTable *) methods; // private
 + (BOOL) currentContextDrawingToScreen;
 + (NSGraphicsContext *) graphicsContextWithAttributes: (NSDictionary *)attributes;
 + (NSGraphicsContext *) graphicsContextWithWindow: (NSWindow *)aWindow;
diff --git a/Source/GSFontInfo.m b/Source/GSFontInfo.m
index cb667faad..e8cce4466 100644
--- a/Source/GSFontInfo.m
+++ b/Source/GSFontInfo.m
@@ -868,3 +868,171 @@ static GSFontEnumerator *sharedEnumerator = nil;
 }
 
 @end
+
+@implementation GSFontEnumerator (_GSPrivate_)
+
+- (NSMutableDictionary *) allFontFamilies
+{
+  return allFontFamilies;
+}
+
+- (NSArray *) allFontNames
+{
+  return allFontNames;
+}
+
+- (void) setAllFontFamilies: (NSMutableDictionary *)d
+{
+  allFontFamilies = d;
+}
+
+- (void) setAllFontNames: (NSArray *)a
+{
+  allFontNames = a;
+}
+
+@end
+
+@implementation GSFontInfo (_GSPrivate_)
+
+- (void) setFontName: (NSString *)n
+{
+  ASSIGN(fontName, n);
+}
+
+- (NSString *) fontName
+{
+  return fontName;
+}
+
+- (void) setMatrix: (const CGFloat *)m
+{
+   memcpy(matrix, m, sizeof(matrix));
+}
+
+- (const CGFloat *)matrix
+{
+  return matrix;
+}
+
+- (void) setFamilyName: (NSString *)n
+{
+  ASSIGN(familyName, n);
+}
+
+- (NSString *) familyName
+{
+  return familyName;
+}
+
+- (void) setCoveredCharacterSet: (NSCharacterSet *)c
+{
+  ASSIGN(coveredCharacterSet, c);
+}
+
+- (NSCharacterSet *) coveredCharacterSet
+{
+  return coveredCharacterSet;
+}
+
+- (void) setNumberOfGlyphs: (unsigned)n
+{
+  numberOfGlyphs = n;
+}
+
+- (unsigned) numberOfGlyphs
+{
+  return numberOfGlyphs;
+}
+
+- (void) setAscender: (CGFloat)a
+{
+  ascender = a;
+}
+
+- (CGFloat) ascender
+{
+  return ascender;
+}
+
+- (void) setDescender: (unsigned)d
+{
+  descender = d;
+}
+
+- (CGFloat) descender
+{
+  return descender;
+}
+
+- (void) setFixedPitch: (BOOL)f
+{
+  isFixedPitch = f;
+}
+
+- (BOOL) isFixedPitch
+{
+  return isFixedPitch;
+}
+
+- (void) setBaseFont: (BOOL)f
+{
+  isBaseFont = f;
+}
+
+- (BOOL) isBaseFont
+{
+  return isBaseFont;
+}
+
+- (void) setXHeight: (CGFloat)h
+{
+  xHeight = h;
+}
+
+- (CGFloat) xHeight
+{
+  return xHeight;
+}
+
+- (void) setMaximumAdvancment: (NSSize)s
+{
+  maximumAdvancement = s;
+}
+
+- (NSSize) maximumAdvancement
+{
+  return maximumAdvancement;
+}
+
+- (void) setFontBBox: (NSRect)r
+{
+  fontBBox = r;
+}
+
+- (void) setWeight: w
+{
+  weight = w;
+}
+
+- (int) weight
+{
+  return weight;
+}
+
+- (NSFontTraitMask) traits
+{
+  return traits;
+}
+
+- (void) setTraits: (NSFontTraitMask)t
+{
+  traits = t;
+}
+
+- (void) setMostCompatibleStringEncoding: (NSStringEncoding)e
+{
+  mostCompatibleStringEncoding = e;
+}
+
+@end
diff --git a/Source/GSTrackingRect.m b/Source/GSTrackingRect.m
index dc805af86..1971ca87a 100644
--- a/Source/GSTrackingRect.m
+++ b/Source/GSTrackingRect.m
@@ -142,3 +142,12 @@
 }
 
 @end
+
+@implementation GSTrackingRect (_GSPrivate_)
+
+- (NSRect) rectangle
+{
+  return rectangle;
+}
+
+@end
diff --git a/Source/NSGraphicsContext.m b/Source/NSGraphicsContext.m
index 9cdfb2e58..8d86b502e 100644
--- a/Source/NSGraphicsContext.m
+++ b/Source/NSGraphicsContext.m
@@ -134,6 +134,11 @@ NSGraphicsContext	*GSCurrentContext(void)
   </unit> */
 @implementation NSGraphicsContext 
 
+- (const gsMethodTable *) methods
+{
+  return methods;
+}
+
 + (void) initialize
 {
   if (contextLock == nil)
diff --git a/Source/NSView.m b/Source/NSView.m
index 21b3c3b0c..af3f41bc4 100644
--- a/Source/NSView.m
+++ b/Source/NSView.m
@@ -5204,3 +5204,17 @@ cmpFrame(id view1, id view2, void *context)
 }
 
 @end
+
+@implementation NSView (_GSPrivate_)
+
+- (struct _rFlagsType) rFlags
+{
+  return _rFlags;
+}
+
+- (NSArray *) cursorRects
+{
+  return _cursor_rects;
+}
+
+@end
